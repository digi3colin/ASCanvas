package com.gamemeal.html {	import flash.display.InterpolationMethod;	import flash.display.SpreadMethod;	import flash.geom.Matrix;		/**
	 * @author Colin
	 */
	public class LinearGradient {		public var matrix : Matrix;		public var spreadMethod : String=SpreadMethod.PAD;		public var interpolationMethod : String=InterpolationMethod.RGB;		public var focalPointRatio : Number=0;		public var colorStops:Array=[];				public function LinearGradient(x0:Number,y0:Number,x1:Number,y1:Number){			var h:Number = (x0+x1)/2;			var k:Number = (y0+y1)/2;			var d:Number = Math.sqrt((x1-x0)*(x1-x0)+(y1-y0)*(y1-y0));						var tx:Number=k-d/2; 			var ty:Number=h-d/2;			matrix = new Matrix();			matrix.createGradientBox(d,d, Math.atan2(y1-y0, x1-x0),tx,ty);		}				public function addColorStop(offset:Number, color : String) : void{			colorStops.push(new ColorStop(offset,color));			colorStops.sortOn('offset');		}				public function get alphas():Array{			var ary:Array = [];			for(var i:int=0;i<colorStops.length;i++){				ary[i]= ColorStop(colorStops[i]).alpha;			}			return ary;		}				public function get ratios():Array{			var ary:Array = [];			for(var i:int=0;i<colorStops.length;i++){				ary[i]= Math.round(ColorStop(colorStops[i]).offset*255);			}			return ary;		}				public function get colors():Array{			var ary:Array = [];			for(var i:int=0;i<colorStops.length;i++){				ary[i]= ColorStop(colorStops[i]).color;			}			return ary;		}	}}import com.gamemeal.html.CSSColor;class ColorStop{	public var offset:Number;	public var color:Number;	public var alpha:Number;	public function ColorStop(offset:Number, color : String){		var c:CSSColor = new CSSColor(color);		this.color = c.color;		this.alpha = c.alpha;		this.offset = offset;	}}